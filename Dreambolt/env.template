# DreamBolt Environment Configuration Template
# Copy this file to .env and fill in your actual values

# ===== LLM Provider Configuration =====
# OpenAI API key for synthesis and embeddings
OPENAI_API_KEY=sk-your-openai-key-here

# Alternative: HuggingFace token for local models
# HUGGINGFACE_TOKEN=hf_your-token-here

# ===== Firebolt Database Configuration =====
# Choose between Managed Firebolt (cloud) or Firebolt Core (self-hosted)

# Option 1: Firebolt Core (FREE, self-hosted with Docker)
# Set to 'true' to use free Firebolt Core instead of managed Firebolt
FIREBOLT_USE_CORE=true
FIREBOLT_CORE_PORT=5432
FIREBOLT_CORE_CONTAINER=dreambolt-firebolt-core
FIREBOLT_CORE_IMAGE=ghcr.io/firebolt-db/firebolt-core:preview-rc

# Option 2: Managed Firebolt (cloud service) - uncomment if using
# FIREBOLT_USE_CORE=false
# FIREBOLT_USERNAME=your-username@company.com
# FIREBOLT_PASSWORD=your-secure-password
# FIREBOLT_ACCOUNT_NAME=your-account-name

# Optional database settings (applies to both Core and Managed)
FIREBOLT_DATABASE=dreambolt
FIREBOLT_ENGINE=dreambolt_engine
# FIREBOLT_API_ENDPOINT=https://api.firebolt.io

# ===== AWS Configuration =====
# For S3 data source support (can use AWS CLI credentials instead)
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_DEFAULT_REGION=us-east-1

# ===== Development Settings =====
# Logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Enable development features
DEV_MODE=false

# ===== Getting Started =====
# 1. Copy this file: cp env.template .env
# 2. Fill in your credentials (at minimum OPENAI_API_KEY)
# 3. Install Docker if using Firebolt Core: https://docs.docker.com/get-docker/
# 4. Setup Firebolt Core: python -m cli firebolt setup
# 5. Test connection: python -m cli status
# 6. Run ingestion: python -m cli ingest wcdata/WorldCupMatches.csv --no-synth
# 
# ‚úÖ Firebolt Core: Free, unlimited, self-hosted analytics
# üìñ Documentation: https://docs.firebolt.io/firebolt-core
# ‚ÑπÔ∏è  Run 'python -m cli --help' for full usage documentation 